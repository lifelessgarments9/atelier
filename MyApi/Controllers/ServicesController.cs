using Microsoft.AspNetCore.Mvc;


using MyApi.Models;
namespace MyApi.Controllers;
[ApiController]
[Route("api/[controller]")]
public class ServicesController : ControllerBase
{
    private readonly AtelierContext _context;

    public ServicesController(AtelierContext context)
    {
        _context = context;
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏
    [HttpGet]
    public IActionResult GetAll()
    {
        var services = _context.Services.ToList();
        return Ok(services);
    }

    // üîπ –ü–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É –ø–æ ID
    [HttpGet("{id}")]
    public IActionResult GetById(int id)
    {
        var service = _context.Services.Find(id);
        if (service == null)
            return NotFound($"–£—Å–ª—É–≥–∞ —Å ID {id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.");
        return Ok(service);
    }

    // üîπ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —É—Å–ª—É–≥—É
    [HttpPost]
    public IActionResult Create([FromBody] Service newService)
    {
        if (!ModelState.IsValid)
            return BadRequest(ModelState);

        _context.Services.Add(newService);
        _context.SaveChanges();

        return CreatedAtAction(nameof(GetById), new { id = newService.Id }, newService);
    }

    // üîπ –û–±–Ω–æ–≤–∏—Ç—å —É—Å–ª—É–≥—É
    [HttpPut("{id}")]
    public IActionResult Update(int id, [FromBody] Service updatedService)
    {
        var service = _context.Services.Find(id);
        if (service == null)
            return NotFound();

        service.Name = updatedService.Name;
        service.Price = updatedService.Price;
        _context.SaveChanges();

        return Ok(service);
    }

    // üîπ –£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É
    [HttpDelete("{id}")]
    public IActionResult Delete(int id)
    {
        var service = _context.Services.Find(id);
        if (service == null)
            return NotFound();

        _context.Services.Remove(service);
        _context.SaveChanges();

        return NoContent();
    }
}

/* (http –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–¥)
 —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:

–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ —É—Å–ª—É–≥–∏ [HttpGet] *

–ü–æ–ª—É—á–∏—Ç—å —É—Å–ª—É–≥—É –ø–æ ID [HttpGet("{id}")] id

–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —É—Å–ª—É–≥—É [HttpPost] +

–û–±–Ω–æ–≤–∏—Ç—å —É—Å–ª—É–≥—É [HttpPut("{id}")] upd

–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É [HttpDelete("{id}")] -
*/