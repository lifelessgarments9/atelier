import React, { useState, useEffect } from 'react';
import './ProfilePage.css';
import { useNavigate } from 'react-router-dom';

function ProfilePage({ user, onLogout }) {
    const navigate = useNavigate();
    const [activeTab, setActiveTab] = useState('profile');
    const [orders, setOrders] = useState([]);
    const [settings, setSettings] = useState({
        notifications: true,
    });

    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData = {
        username: user,
        telegramVerified: true,
        joinDate: '2025-01-26',
        phone: '+7 (999) 123-45-67',
    };

    const loadUserOrders = async () => {
        try {
            console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user);
            const response = await fetch(`http://localhost:5041/api/orders`);
            if (response.ok) {
                const allOrders = await response.json();
                console.log('–í—Å–µ –∑–∞–∫–∞–∑—ã –∏–∑ API:', allOrders);

                // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫–∞–∑—ã —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const userOrders = allOrders.filter(order => {
                    const orderUsername = order.tgUsername || order.TgUsername;
                    const cleanOrderUsername = orderUsername?.replace('@', '');
                    const cleanUser = user?.replace('@', '');
                    return cleanOrderUsername === cleanUser;
                });

                console.log('–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userOrders);
                setOrders(userOrders);
            } else {
                console.error('–û—à–∏–±–∫–∞ HTTP:', response.status);
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', error);
        }
    };

    useEffect(() => {
        if (user) {
            loadUserOrders();
        }
    }, [user]);

    const handleCreateOrder = () => {
        navigate('/neworder');
    };

    const handleSettingChange = (setting) => {
        setSettings(prev => ({
            ...prev,
            [setting]: !prev[setting]
        }));
    };

    const getStatusText = (status) => {
        const statusMap = {
            'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω',
            'in_progress': '–í —Ä–∞–±–æ—Ç–µ',
            'pending': '–û–∂–∏–¥–∞–µ—Ç',
            'new': '–ù–æ–≤—ã–π'
        };
        return statusMap[status] || status;
    };

    const getStatusClass = (status) => {
        const classMap = {
            'completed': 'status-completed',
            'in_progress': 'status-in-progress',
            'pending': 'status-pending',
            'new': 'status-pending'
        };
        return classMap[status] || '';
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–∫–∞–∑–∞
    const debugOrder = (order) => {
        console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–∫–∞–∑–∞:', order);
    };

    return (
        <div className="profile-page">
            <div className="profile-container">
                <button className="back-btn" onClick={() => navigate('/')}>
                    ‚Üê –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </button>

                <div className="profile-header">
                    <h2>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h2>
                </div>

                <div className="profile-tabs">
                    <button
                        className={`profile-tab ${activeTab === 'profile' ? 'active' : ''}`}
                        onClick={() => setActiveTab('profile')}
                    >
                        üë§ –ü—Ä–æ—Ñ–∏–ª—å
                    </button>
                    <button
                        className={`profile-tab ${activeTab === 'orders' ? 'active' : ''}`}
                        onClick={() => setActiveTab('orders')}
                    >
                        üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã
                    </button>
                    <button
                        className={`profile-tab ${activeTab === 'settings' ? 'active' : ''}`}
                        onClick={() => setActiveTab('settings')}
                    >
                        ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                    </button>
                </div>

                {/* --- –ü–†–û–§–ò–õ–¨ --- */}
                {activeTab === 'profile' && (
                    <div className="profile-content">
                        <div className="profile-info-card">
                            <div className="profile-avatar-section">
                                <div className="profile-avatar">
                                    üë§
                                </div>
                                <div className="avatar-actions">
                                    <button className="avatar-btn">–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ</button>
                                </div>
                            </div>

                            <div className="profile-details">
                                <div className="detail-row">
                                    <span className="detail-label">–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</span>
                                    <span className="detail-value">@{userData.username}</span>
                                </div>
                                <div className="detail-row">
                                    <span className="detail-label">Telegram:</span>
                                    <span className="detail-value verified">
                                        –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω ‚úÖ
                                    </span>
                                </div>
                                <div className="detail-row">
                                    <span className="detail-label">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</span>
                                    <span className="detail-value">{userData.joinDate}</span>
                                </div>
                                <div className="detail-row">
                                    <span className="detail-label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                                    <span className="detail-value">{userData.phone}</span>
                                </div>
                            </div>

                            <div className="profile-stats">
                                <div className="stat-item">
                                    <span className="stat-number">{orders.length}</span>
                                    <span className="stat-label">–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤</span>
                                </div>
                                <div className="stat-item">
                                    <span className="stat-number">
                                        {orders.filter(order => order.status === 'completed').length}
                                    </span>
                                    <span className="stat-label">–ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>
                                </div>
                                <div className="stat-item">
                                    <span className="stat-number">
                                        {orders.filter(order => order.status === 'in_progress' || order.status === 'new').length}
                                    </span>
                                    <span className="stat-label">–í —Ä–∞–±–æ—Ç–µ</span>
                                </div>
                            </div>
                        </div>
                    </div>
                )}

                {/* --- –ó–ê–ö–ê–ó–´ --- */}
                {activeTab === 'orders' && (
                    <div className="profile-content">
                        <div className="orders-header">
                            <h3>–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h3>
                            <button className="new-order-btn" onClick={handleCreateOrder}>
                                + –ù–æ–≤—ã–π –∑–∞–∫–∞–∑
                            </button>
                        </div>

                        {orders.length === 0 ? (
                            <div className="empty-orders">
                                <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>
                                <button className="cta-order-btn" onClick={handleCreateOrder}>
                                    –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑
                                </button>
                            </div>
                        ) : (
                            <div className="orders-list">
                                {orders.map(order => (
                                    <div key={order.id} className="order-card" onClick={() => debugOrder(order)}>
                                        <div className="order-header">
                                            <span className="order-service">
                                                {'–ó–∞–∫–∞–∑ –æ—Ç '+ (
                                                    order.createdAt
                                                        ? new Date(order.createdAt).toLocaleDateString('ru-RU')
                                                        : new Date().toLocaleDateString('ru-RU')
                                                )}
</span>
                                            <span className={`order-status ${getStatusClass(order.status)}`}>
                                                {getStatusText(order.status)}
                                            </span>
                                        </div>
                                        <div className="order-details">
                                            <span className="order-price">{order.totalPrice || order.TotalPrice || 0} ‚ÇΩ</span>
                                            <span className="order-date">
                                                {new Date(order.createdAt || order.CreatedAt).toLocaleDateString('ru-RU')}
                                            </span>
                                        </div>
                                        <div className="order-info">
                                            <p><strong>–ö–ª–∏–µ–Ω—Ç:</strong> {order.customerName || order.CustomerName}</p>
                                            <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> {order.phone || order.Phone}</p>
                                        </div>
                                        <div className="order-actions">
                                            <button className="order-action-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>
                                            <button className="order-action-btn">–ù–∞–ø–∏—Å–∞—Ç—å</button>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                )}

                {/* --- –ù–ê–°–¢–†–û–ô–ö–ò --- */}
                {activeTab === 'settings' && (
                    <div className="profile-content">
                        <div className="settings-section">
                            <h3>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                            <div className="setting-item">
                                <div className="setting-info">
                                    <span className="setting-label">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö</span>
                                    <span className="setting-description">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–æ–≤</span>
                                </div>
                                <label className="switch">
                                    <input
                                        type="checkbox"
                                        checked={settings.notifications}
                                        onChange={() => handleSettingChange('notifications')}
                                    />
                                    <span className="slider"></span>
                                </label>
                            </div>
                        </div>

                        <div className="settings-section">
                            <h3>–ê–∫–∫–∞—É–Ω—Ç</h3>
                            <div className="account-actions">
                                <button className="account-btn change-password">
                                    –°–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å
                                </button>
                            </div>
                        </div>
                    </div>
                )}

                <div className="profile-footer">
                    <button className="logout-btn" onClick={onLogout}>
                        üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
                    </button>
                </div>
            </div>
        </div>
    );
}

export default ProfilePage;